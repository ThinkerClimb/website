<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../../header.js"></script>
<div id="page">
<h3>Windows Driver Model >> WDK 7.1 >> MASM32 >> Advanced</h3>
<p><b>IOCTL(METHOD_BUFFERED)</b></p>
<hr size="1">
<p>
[Github] <a href="https://github.com/steward-fu/gh_driver.git">https://github.com/steward-fu/gh_driver.git</a><br>

</p><br>

<table>
  <thead>
    <tr>
      <th></th>
      <th>Type</th>
      <th>Buffer</th>
      <th>Length</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Input</td>
      <td>METHOD_BUFFERED</td>
      <td>(Irp)<br>AssociatedIrp.SystemBuffer</td>
      <td>(IrpStack)<br>Parameters.DeviceIoControl.InputBufferLength</td>
    </tr>
    <tr>
      <td>Output</td>
      <td>METHOD_BUFFERED</td>
      <td>(Irp)<br>AssociatedIrp.SystemBuffer</td>
      <td>(IrpStack)<br>Parameters.DeviceIoControl.OutputBufferLength</td>
    </tr>
  </tbody>
</table>

<p>
main.asm
</p>

<pre class="brush:cpp">
;//========================================================================================================
;//  Basically, all of files downloaded from my website can be modified or redistributed for any purpose.
;//  It is my honor to share my interesting to everybody.
;//  If you find any illeage content out from my website, please contact me firstly.
;//  I will remove all of the illeage parts.
;//  Thanks :)
;//  
;//  Steward Fu
;//  steward.fu@gmail.com
;//  https://steward-fu.github.io/website/index.htm
;//========================================================================================================*/
.386p
.model flat, stdcall
option casemap:none
 
include c:\masm32\include\w2k\ntstatus.inc
include c:\masm32\include\w2k\ntddk.inc
include c:\masm32\include\w2k\ntoskrnl.inc
include c:\masm32\include\w2k\ntddkbd.inc
include c:\masm32\Macros\Strings.mac
includelib c:\masm32\lib\wxp\i386\ntoskrnl.lib
  
public DriverEntry
 
OurDeviceExtension struct
  pNextDev PDEVICE_OBJECT ?
  szBuffer byte 1024 dup(?)
  dwBufferLength dword ?
OurDeviceExtension ends

IOCTL_BUFFER_GET  equ CTL_CODE(FILE_DEVICE_UNKNOWN, 800h, METHOD_BUFFERED, FILE_ANY_ACCESS)
IOCTL_BUFFER_SET  equ CTL_CODE(FILE_DEVICE_UNKNOWN, 801h, METHOD_BUFFERED, FILE_ANY_ACCESS)
 
.const
DEV_NAME word "\","D","e","v","i","c","e","\","f","i","r","s","t","I","O","C","T","L","-","B","u","f","f","e","r",0
SYM_NAME word "\","D","o","s","D","e","v","i","c","e","s","\","f","i","r","s","t","I","O","C","T","L","-","B","u","f","f","e","r",0

.code
;// process file irp
IrpOpenClose proc uses ebx pOurDevice:PDEVICE_OBJECT, pIrp:PIRP
  IoGetCurrentIrpStackLocation pIrp
  movzx ebx, (IO_STACK_LOCATION PTR [eax]).MajorFunction
  .if ebx == IRP_MJ_CREATE
    invoke DbgPrint, $CTA0("IRP_MJ_CREATE")
  .elseif ebx == IRP_MJ_CLOSE
    invoke DbgPrint, $CTA0("IRP_MJ_CLOSE")
  .endif

  mov eax, pIrp
  and (_IRP PTR [eax]).IoStatus.Information, 0
  mov (_IRP PTR [eax]).IoStatus.Status, STATUS_SUCCESS
  fastcall IofCompleteRequest, pIrp, IO_NO_INCREMENT
  mov eax, STATUS_SUCCESS
  ret
IrpOpenClose endp

;// process ioctl irp
IrpIOCTL proc uses ebx ecx pOurDevice:PDEVICE_OBJECT, pIrp:PIRP
  local dwLen: DWORD
  local pdx:PTR OurDeviceExtension
  local pBuf:DWORD

  push 0
  pop dwLen

  mov eax, pOurDevice
  push (DEVICE_OBJECT PTR [eax]).DeviceExtension
  pop pdx

  IoGetCurrentIrpStackLocation pIrp
  mov eax, (IO_STACK_LOCATION PTR [eax]).Parameters.DeviceIoControl.IoControlCode
  .if eax == IOCTL_BUFFER_GET
    invoke DbgPrint, $CTA0("_IOCTL_BUFFER_GET")
    mov eax, pdx
    push (OurDeviceExtension PTR [eax]).dwBufferLength
    pop dwLen

    mov eax, pIrp
    push (_IRP PTR [eax]).AssociatedIrp.SystemBuffer
    pop pBuf

    mov eax, pdx
    invoke memcpy, pBuf, addr (OurDeviceExtension PTR [eax]).szBuffer, dwLen
  .elseif eax == IOCTL_BUFFER_SET
    invoke DbgPrint, $CTA0("_IOCTL_BUFFER_SET")

    IoGetCurrentIrpStackLocation pIrp
    push (IO_STACK_LOCATION PTR [eax]).Parameters.DeviceIoControl.InputBufferLength 
    pop dwLen

    mov eax, pIrp
    push (_IRP PTR [eax]).AssociatedIrp.SystemBuffer
    pop pBuf

    mov eax, pdx
    invoke memcpy, addr (OurDeviceExtension PTR [eax]).szBuffer, pBuf, dwLen

    mov eax, pdx
    push dwLen
    pop (OurDeviceExtension PTR [eax]).dwBufferLength
    invoke DbgPrint, $CTA0("Buf: %s, Len: %d"), pBuf, dwLen
  .endif

  mov eax, pIrp
  mov (_IRP PTR [eax]).IoStatus.Status, STATUS_SUCCESS
  push dwLen
  pop (_IRP PTR [eax]).IoStatus.Information 
  fastcall IofCompleteRequest, pIrp, IO_NO_INCREMENT
  mov eax, STATUS_SUCCESS
  ret
IrpIOCTL endp

;//*** process pnp irp
IrpPnP proc uses ebx pOurDevice:PDEVICE_OBJECT, pIrp:PIRP
  local pdx:PTR OurDeviceExtension
  local szSymName:UNICODE_STRING

  mov eax, pOurDevice
  push (DEVICE_OBJECT PTR [eax]).DeviceExtension
  pop pdx
   
  IoGetCurrentIrpStackLocation pIrp
  movzx ebx, (IO_STACK_LOCATION PTR [eax]).MinorFunction
  .if ebx == IRP_MN_START_DEVICE
    mov eax, pIrp
    mov (_IRP PTR [eax]).IoStatus.Status, STATUS_SUCCESS
  .elseif ebx == IRP_MN_REMOVE_DEVICE
    invoke RtlInitUnicodeString, addr szSymName, offset SYM_NAME
    invoke IoDeleteSymbolicLink, addr szSymName     
    mov eax, pIrp
    mov (_IRP PTR [eax]).IoStatus.Status, STATUS_SUCCESS

    mov eax, pdx
    invoke IoDetachDevice, (OurDeviceExtension PTR [eax]).pNextDev
    invoke IoDeleteDevice, pOurDevice
  .endif
  IoSkipCurrentIrpStackLocation pIrp

  mov eax, pdx
  invoke IoCallDriver, (OurDeviceExtension PTR [eax]).pNextDev, pIrp
  ret
IrpPnP endp

;//*** system will vist this routine when it needs to add new device
AddDevice proc pOurDriver:PDRIVER_OBJECT, pPhyDevice:PDEVICE_OBJECT
  local pOurDevice:PDEVICE_OBJECT
  local suDevName:UNICODE_STRING
  local szSymName:UNICODE_STRING
  
  invoke DbgPrint, $CTA0("MASM32 WDM driver tutorial for Device IOCTL-Buffer")
  invoke RtlInitUnicodeString, addr suDevName, offset DEV_NAME
  invoke RtlInitUnicodeString, addr szSymName, offset SYM_NAME
  
  invoke IoCreateDevice, pOurDriver, sizeof OurDeviceExtension, addr suDevName, FILE_DEVICE_UNKNOWN, 0, FALSE, addr pOurDevice
  .if eax == STATUS_SUCCESS
    invoke IoAttachDeviceToDeviceStack, pOurDevice, pPhyDevice
    .if eax != NULL
      push eax
      mov eax, pOurDevice
      mov eax, (DEVICE_OBJECT PTR [eax]).DeviceExtension
      pop (OurDeviceExtension PTR [eax]).pNextDev

      mov eax, pOurDevice
      or (DEVICE_OBJECT PTR [eax]).Flags, DO_BUFFERED_IO
      and (DEVICE_OBJECT PTR [eax]).Flags, not DO_DEVICE_INITIALIZING
      mov eax, STATUS_SUCCESS
    .else
    mov eax, STATUS_UNSUCCESSFUL
    .endif      
    invoke IoCreateSymbolicLink, addr szSymName, addr suDevName
  .endif
  ret
AddDevice endp
  
;//*** it is time to unload our driver
Unload proc pOurDriver:PDRIVER_OBJECT
  xor eax, eax
  ret
Unload endp

;//*** driver entry
DriverEntry proc pOurDriver:PDRIVER_OBJECT, pOurRegistry:PUNICODE_STRING
  mov eax, pOurDriver
  mov (DRIVER_OBJECT PTR [eax]).MajorFunction[IRP_MJ_PNP    * (sizeof PVOID)], offset IrpPnP
  mov (DRIVER_OBJECT PTR [eax]).MajorFunction[IRP_MJ_CREATE * (sizeof PVOID)], offset IrpOpenClose
  mov (DRIVER_OBJECT PTR [eax]).MajorFunction[IRP_MJ_CLOSE  * (sizeof PVOID)], offset IrpOpenClose
  mov (DRIVER_OBJECT PTR [eax]).MajorFunction[IRP_MJ_DEVICE_CONTROL * (sizeof PVOID)], offset IrpIOCTL
  mov (DRIVER_OBJECT PTR [eax]).DriverUnload, offset Unload
  mov eax, (DRIVER_OBJECT PTR [eax]).DriverExtension
  mov (DRIVER_EXTENSION PTR [eax]).AddDevice, AddDevice
  mov eax, STATUS_SUCCESS
  ret
DriverEntry endp
end DriverEntry
.end
</pre>

<p>
main.inf
</p>

<pre class="brush:cpp">
;//========================================================================================================
;//  Basically, all of files downloaded from my website can be modified or redistributed for any purpose.
;//  It is my honor to share my interesting to everybody.
;//  If you find any illeage content out from my website, please contact me firstly.
;//  I will remove all of the illeage parts.
;//  Thanks :)
;//  
;//  Steward Fu
;//  steward.fu@gmail.com
;//  https://steward-fu.github.io/website/index.htm
;//========================================================================================================*/
[Version]
Signature=$CHICAGO$
Class=Unknown
Provider=%MFGNAME%
DriverVer=12/23/2016,1.0.0.0
   
[DestinationDirs]
DefaultDestDir=10,System32\Drivers
   
[Manufacturer]
%MFGNAME%=DeviceList
   
[SourceDisksFiles]
main.sys=1,,,
   
[SourceDisksNames]
1=%INSTDISK%,,,
   
[DeviceList]
%DESCRIPTION%=DriverInstall, *firstIOCTL-Buffer
   
[DriverInstall.NT]
CopyFiles=DriverCopyFiles
   
[DriverCopyFiles]
main.sys,,,2
   
[DriverInstall.NT.Services]
AddService=FILEIO,2,DriverService
   
[DriverService]
ServiceType=1
StartType=3
ErrorControl=1
ServiceBinary=%10%\system32\drivers\main.sys
   
[DriverInstall.NT.HW]
AddReg=DriverHwAddReg
   
[DriverHwAddReg]
HKR,,SampleInfo,,""
   
[DriverInstall]
AddReg=DriverAddReg
CopyFiles=DriverCopyFiles
   
[DriverAddReg]
HKR,,DevLoader,,*ntkern
HKR,,NTMPDriver,,main.sys
   
[DriverInstall.HW]
AddReg=DriverHwAddReg
   
[Strings]
MFGNAME="firstIOCTL-Buffer"
INSTDISK="firstIOCTL-Buffer Disc"
DESCRIPTION="firstIOCTL-Buffer(Assembly)"
</pre>

<p>
<img src="asm_ioctl-buffer/1.jpg" class="maxSize">
</p>

<p>
<img src="asm_ioctl-buffer/2.jpg" class="maxSize">
</p>

<p>
<img src="asm_ioctl-buffer/3.jpg" class="maxSize">
</p>

<p>
<img src="asm_ioctl-buffer/4.jpg" class="maxSize">
</p>

<p>
app.asm
</p>

<pre class="brush:cpp">
;//========================================================================================================
;//  Basically, all of files downloaded from my website can be modified or redistributed for any purpose.
;//  It is my honor to share my interesting to everybody.
;//  If you find any illeage content out from my website, please contact me firstly.
;//  I will remove all of the illeage parts.
;//  Thanks :)
;//  
;//  Steward Fu
;//  steward.fu@gmail.com
;//  https://steward-fu.github.io/website/index.htm
;//========================================================================================================*/
.386p
.model flat, stdcall
option casemap:none

include c:\masm32\include\windows.inc
include c:\masm32\include\masm32.inc
include c:\masm32\include\user32.inc
include c:\masm32\include\msvcrt.inc
include c:\masm32\include\kernel32.inc
include c:\masm32\include\w2k\ntddkbd.inc
include c:\masm32\Macros\Strings.mac
 
includelib c:\masm32\lib\user32.lib
includelib c:\masm32\lib\masm32.lib
includelib c:\masm32\lib\msvcrt.lib
includelib c:\masm32\lib\kernel32.lib

IOCTL_BUFFER_GET  equ CTL_CODE(FILE_DEVICE_UNKNOWN, 800h, METHOD_BUFFERED, FILE_ANY_ACCESS)
IOCTL_BUFFER_SET  equ CTL_CODE(FILE_DEVICE_UNKNOWN, 801h, METHOD_BUFFERED, FILE_ANY_ACCESS)

.const 
DEV_NAME  db "\\.\firstIOCTL-Buffer",0

.data?
hFile     dd ?
dwRet     dd ?
szBuffer  db 255 dup(?)

.code
start:
  invoke CreateFile, offset DEV_NAME, GENERIC_READ or GENERIC_WRITE, FILE_SHARE_READ, 0, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, 0
  .if eax == INVALID_HANDLE_VALUE
    invoke crt_printf, $CTA0("failed to open firstIOCTL-Buffer driver")
    invoke ExitProcess, 0
  .endif
  mov hFile, eax
  
  ;// IOCTL_BUFFER_SET
  invoke wsprintf, offset szBuffer, $CT0("test is testing message")
  invoke StrLen, offset szBuffer
  inc eax
  mov dwRet, eax
  invoke DeviceIoControl, hFile, IOCTL_BUFFER_SET, offset szBuffer, dwRet, NULL, 0, offset dwRet, NULL
  ;// IOCTL_BUFFER_GET
  invoke crt_memset, offset szBuffer, 0, 255
  invoke DeviceIoControl, hFile, IOCTL_BUFFER_GET, NULL, 0, offset szBuffer, 255, offset dwRet, NULL
  invoke crt_printf, $CTA0("_IOCTL_BUFFER_GET: %s\n"), offset szBuffer

  invoke CloseHandle, hFile
  invoke ExitProcess, 0
end start
</pre>

<p>
<img src="asm_ioctl-buffer/5.jpg" class="maxSize">
</p>

<p>
<img src="asm_ioctl-buffer/6.jpg" class="maxSize">
</p>

<p>
<br><a href="../../../driver.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
