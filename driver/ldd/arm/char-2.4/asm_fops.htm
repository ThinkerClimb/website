<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../../../header.js"></script>
<div id="page">
<h3>Linux Device Driver >> ARM CPU >> Assembly >> Advanced >> Char (Kernel 2.4)</h3>
<p><b>File Operation</b></p>
<hr size="1">
<p>
[Github] <a href="https://github.com/steward-fu/gh_driver.git">https://github.com/steward-fu/gh_driver.git</a>
</p>

<p>
主程式
</p>

<pre>
$ vim main.S
</pre>

<pre class="brush:cpp">
#//===========================================================================
#// Linux Device Driver for ARM in Assembly
#// This file can be distributed or modified under GPL license
#// http://steward-fu.github.io/website/../../../../driver.htm
#// Steward Fu 2016/02/12
#//===========================================================================
.equ FOPS_READ,    2
.equ FOPS_WRITE,   3
.equ FOPS_OPEN,    12
.equ FOPS_RELEASE, 14
.equ FOPS_SIZE,    (27 &lt;&lt; 2)

.section .modinfo
__module_kernel_version: .asciz "kernel_version=2.6.28";    .align
__module_license:        .asciz "license=GPL";              .align 
__module_author:         .asciz "author=Steward";           .align 
__module_description:    .asciz "description=Linux Driver"; .align

.section .text
dev_name:   .asciz "lddia";                       .align
msg_load:   .asciz "lddia, load it!\n";           .align
msg_unload: .asciz "lddia, unload it!\n";         .align
msg_major:  .asciz "lddia, major number is %d\n"; .align 
msg_open:   .asciz "lddia, open\n";               .align 
msg_close:  .asciz "lddia, close\n";              .align 
msg_read:   .asciz "lddia, read\n";               .align 
msg_write:  .asciz "lddia, write buffer: %s";     .align

.section .data
major:  .skip         1; .align
buffer: .skip       255; .align 
fops:   .skip FOPS_SIZE; .align

.section .text
.global init_module
.global cleanup_module
.extern memset
.extern memcpy
.extern printk
.extern register_chrdev
.extern unregister_chrdev
lddia_open:
  push {lr}
  ldr r0, =msg_open
  bl printk
  mov r0, #0
  pop {pc}

lddia_close:
  push {lr}
  ldr r0, =msg_close
  bl printk
  mov r0, #0
  pop {pc}

lddia_read:
  push {lr}
  ldr r0, =msg_read
  bl printk
  mov r0, #0
  pop {pc}

lddia_write:
  push {r4, r5, lr}
  mov r4, r1
  mov r5, r2
  # memset(buffer, 0, sizeof(buffer))
  ldr r0, =buffer
  mov r1, #0
  mov r2, #255
  bl memset
  # memcpy(buffer, buff, count)
  ldr r0, =buffer
  mov r1, r4
  mov r2, r5
  bl memcpy
  # printk(msg_write, buffer)
  ldr r1, =buffer
  ldr r0, =msg_write
  bl printk
  # return count
  mov r0, r5
  pop {r4, r5, pc}

cleanup_module:
  push {lr}
  # unregister(major, dev_name)
  ldr r1, =major
  ldr r0, [r1]
  ldr r1, =dev_name
  bl unregister_chrdev
  # printk(msg_unload)
  ldr r0, =msg_unload
  bl printk
  pop {pc}

init_module:
  push {lr}
  # fops.open = lddia_open
  adr r2, lddia_open
  ldr r1, =fops
  mov r0, #FOPS_OPEN
  add r0, r1, r0, lsl #2
  str r2, [r0]
  # fops.close = lddia_close
  adr r2, lddia_close
  ldr r1, =fops
  mov r0, #FOPS_RELEASE
  add r0, r1, r0, lsl #2
  str r2, [r0]
  # fops.read = lddia_read
  adr r2, lddia_read
  ldr r1, =fops
  mov r0, #FOPS_READ
  add r0, r1, r0, lsl #2
  str r2, [r0]
  # fops.write = lddia_write
  adr r2, lddia_write
  ldr r1, =fops
  mov r0, #FOPS_WRITE
  add r0, r1, r0, lsl #2
  str r2, [r0]
  # printk(msg_load)
  ldr r0, =msg_load
  bl printk
  # register_chrdev(0, dev_name, &amp;fops)
  ldr r2, =fops
  ldr r1, =dev_name
  mov r0, #0
  bl register_chrdev
  # printk(msg_major, major)
  ldr r2, =major
  str r0, [r2]
  mov r1, r0
  ldr r0, =msg_major
  bl printk
  # return 0
  mov r0, #0
  pop {pc}
  .end
</pre>

<p>
新增Makefile編譯檔案(檔案名稱的大小寫是固定的)
</p>

<pre>
$ vim Makefile
obj-m += ldd.o
ldd-objs:= main.o
all:
    as -o main.o main.S
    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules
clean:
    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
</pre>

<p>
make指令的前面有一個Tab字元，請不要使用空白鍵代替，不然會無法編譯驅動程式
</p>

<p>
接著輸入<b>make</b>指令進行編譯就可以產生Linux驅動程式檔案(main.ko)
</p>

<pre>
$ make
as -o main.o main.S
make -C /lib/modules/2.6.28.10-power53/build M=/home/user/Data/n900/ldd/asm/char/fops-2.4 modules
make[1]: Entering directory `/usr/src/2.6.28.10-power54'
  LD [M]  /home/user/Data/n900/ldd/asm/char/fops-2.4/ldd.o
  Building modules, stage 2.
  MODPOST 1 modules
  LD [M]  /home/user/Data/n900/ldd/asm/char/fops-2.4/ldd.ko
make[1]: Leaving directory `/usr/src/2.6.28.10-power54'
</pre>

<p>
編譯完成後(Linux Kernel 2.6的驅動程式附檔名為<b>*.ko</b>, Linux Kernel 2.4的驅動程式附檔名為<b>*.o</b>)
</p>

<p>
載入驅動程式(insmod)和查看Debug訊息(dmesg)
</p>

<pre>
$ sudo insmod ldd.ko
$ dmesg
[106330.749450] lddia, load it!
[106330.749511] lddia, major number is 246
</pre>

<p>
裝置資訊
</p>

<pre>
$ cat /proc/devices
Character devices:
 ...
246 lddia
 ...
</pre>

<p>
建立Symbolic
</p>

<pre>
$ sudo mknod /dev/lddia c 246 0
$ sudo chmod 0777 /dev/lddia
</pre>

<p>
測試
</p>

<pre>
$ sudo echo "test" > /dev/lddia
$ dmesg
[106388.324432] lddia, open
[106388.348663] lddia, write buffer: test
[106388.348693] lddia, close
</pre>

<p>
刪除Symbolic
</p>

<pre>
$ sudo rm /dev/lddia
</pre>

<p>
卸載驅動程式(rmmod)和查看Debug訊息(dmesg)
</p>

<pre>
$ sudo rmmod ldd
$ dmesg
[106420.798187] lddia, unload it!
</pre>

<p>
<br><a href="../../../../driver.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
