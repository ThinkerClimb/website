<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../../header.js"></script>
<div id="page">
<h3>Dingoo A320 &rArr; Dingux</h3>
<p><b>移植S6D04M0X21驅動程式</b></p>
<hr size="1">
<p>
有了移植ILI9340驅動程式的經驗之後，對於2.8吋 IPS S6D04M0X21就容易多了，一樣只須修改Dingux屏幕初始化的程式就可以，如下說明：
</p>
<pre>
diff jz4740_slcd_orgi.h jz4740_slcd.h
</pre>
<pre class="brush:cpp">
33a34,318
> 
> #ifdef CONFIG_JZ_SLCD_A320_S6D04M0X21
> #define PIN_RS_N  (32*2+19)  /* Port 2 pin 19: RS# (register select, active low) */
> #define PIN_CS_N  (32*1+17)  /* Port 1 pin 17: CS# (chip select, active low) */
> #define PIN_RESET_N  (32*1+18)  /* Port 1 pin 18: RESET# (reset, active low) */
> 
> #define  __slcd_special_pin_init()  \
> do {          \
>   __gpio_as_output(PIN_RS_N);  \
>   __gpio_set_pin(PIN_RS_N);  \
>   __gpio_as_output(PIN_CS_N);  \
>   __gpio_set_pin(PIN_CS_N);  \
>   __gpio_as_output(PIN_RESET_N);  \
>   __gpio_clear_pin(PIN_RESET_N);  \
> } while(0)
> 
> #define __slcd_special_on()     \
> do {          \
>   /* RESET pulse */    \
>   __gpio_clear_pin(PIN_RESET_N);  \
>   mdelay(10);      \
>   __gpio_set_pin(PIN_RESET_N);  \
>   mdelay(50);      \
>           \
>   /* Enable chip select */  \
>   __gpio_clear_pin(PIN_CS_N);  \
>           \
>   /* Black magic */    \
>   mdelay(120); \
>   Mcupanel_Command(0x0001); \
>   mdelay(120); \
>   Mcupanel_Command(0x00f0); \
>   Mcupanel_Data(0x005a); \
>   Mcupanel_Data(0x005a); \
>   Mcupanel_Command(0x00f3); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Command(0x00ff); \
>   Mcupanel_Data(0x0030); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0040); \
>   Mcupanel_Command(0x0011); \
>   mdelay(120); \
>   Mcupanel_Command(0x00f3); \
>   Mcupanel_Data(0x0001); \
>   Mcupanel_Data(0x0026); \
>   Mcupanel_Data(0x0026); \
>   Mcupanel_Data(0x0007); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Data(0x0057); \
>   Mcupanel_Data(0x0057); \
>   Mcupanel_Data(0x002c); \
>   Mcupanel_Command(0x00f4); \
>   Mcupanel_Data(0x0060); \
>   Mcupanel_Data(0x0060); \
>   Mcupanel_Data(0x006F); \
>   Mcupanel_Data(0x006F); \
>   Mcupanel_Data(0x0044); \
>   Mcupanel_Command(0x00f5); \
>   Mcupanel_Data(0x0012); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Data(0x0003); \
>   Mcupanel_Data(0x00f0); \
>   Mcupanel_Data(0x0030); \
>   Mcupanel_Data(0x001f); \
>   mdelay(10); \
>   Mcupanel_Command(0x00f3); \
>   Mcupanel_Data(0x0003); \
>   mdelay(20); \
>   Mcupanel_Command(0x00ff); \
>   Mcupanel_Data(0x0030); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0070); \
>   mdelay(20); \
>   Mcupanel_Command(0x00f3); \
>   Mcupanel_Data(0x000f); \
>   Mcupanel_Command(0x00ff); \
>   Mcupanel_Data(0x0030); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0078); \
>   mdelay(20); \
>   Mcupanel_Command(0x00f3); \
>   Mcupanel_Data(0x001f); \
>   Mcupanel_Command(0x00ff); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0078); \
>   mdelay(20); \
>   Mcupanel_Command(0x00f3); \
>   Mcupanel_Data(0x001f); \
>   mdelay(40); \
>   Mcupanel_Command(0x00f3); \
>   Mcupanel_Data(0x00ff); \
>   Mcupanel_Data(0x0026); \
>   Mcupanel_Data(0x0026); \
>   Mcupanel_Data(0x0007); \
>   Mcupanel_Data(0x0055); \
>   Mcupanel_Data(0x0057); \
>   Mcupanel_Data(0x0057); \
>   Mcupanel_Data(0x002c); \
>   mdelay(50); \
>   Mcupanel_Command(0x0011); \
>   mdelay(100); \
>   Mcupanel_Command(0x00f2); \
>   Mcupanel_Data(0x0013); \
>   Mcupanel_Data(0x0013); \
>   Mcupanel_Data(0x0001); \
>   Mcupanel_Data(0x0008); \
>   Mcupanel_Data(0x0008); \
>   Mcupanel_Data(0x0008); \
>   Mcupanel_Data(0x0008); \
>   Mcupanel_Data(0x0010); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0010); \
>   Mcupanel_Data(0x0010); \
>   Mcupanel_Command(0x00fd); \
>   Mcupanel_Data(0x0055); \
>   Mcupanel_Command(0x0035); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Command(0x0036); \
>   Mcupanel_Data(0x00e8); \
>   Mcupanel_Command(0x003a); \
>   Mcupanel_Data(0x0055); \
>   Mcupanel_Command(0x00fe); \
>   Mcupanel_Data(0x0016); \
>   Mcupanel_Data(0x0016); \
>   Mcupanel_Data(0x0028); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0006); \
>   Mcupanel_Command(0x00f6); \
>   Mcupanel_Data(0x0010); \
>   Mcupanel_Data(0x0080); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0010); \
>   Mcupanel_Command(0x0051); \
>   Mcupanel_Data(0x00ff); \
>   Mcupanel_Command(0x0053); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Command(0x0055); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Command(0x005e); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Command(0x00ca); \
>   Mcupanel_Data(0x0080); \
>   Mcupanel_Data(0x0080); \
>   Mcupanel_Data(0x0020); \
>   Mcupanel_Command(0x00cb); \
>   Mcupanel_Data(0x0001); \
>   Mcupanel_Command(0x00f7); \
>   Mcupanel_Data(0x0092); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x0026); \
>   Mcupanel_Data(0x001c); \
>   Mcupanel_Data(0x001c); \
>   Mcupanel_Data(0x0024); \
>   Mcupanel_Data(0x001b); \
>   Mcupanel_Data(0x0009); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Data(0x0018); \
>   Mcupanel_Command(0x00f8); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x0024); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x001f); \
>   Mcupanel_Data(0x0027); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x000a); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Command(0x00f9); \
>   Mcupanel_Data(0x0086); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x0010); \
>   Mcupanel_Data(0x0010); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x001b); \
>   Mcupanel_Data(0x001f); \
>   Mcupanel_Data(0x0027); \
>   Mcupanel_Data(0x001b); \
>   Mcupanel_Data(0x001f); \
>   Mcupanel_Data(0x0027); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x000a); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Data(0x0018); \
>   Mcupanel_Command(0x00fa); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x0024); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x001f); \
>   Mcupanel_Data(0x0027); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x000a); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Command(0x00fb); \
>   Mcupanel_Data(0x0080); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x001b); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x0026); \
>   Mcupanel_Data(0x0017); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x0014); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Data(0x0018); \
>   Mcupanel_Command(0x00fc); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x001a); \
>   Mcupanel_Data(0x001d); \
>   Mcupanel_Data(0x0024); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x001f); \
>   Mcupanel_Data(0x0027); \
>   Mcupanel_Data(0x001e); \
>   Mcupanel_Data(0x000a); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Data(0x0011); \
>   Mcupanel_Command(0x002a); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0001); \
>   Mcupanel_Data(0x003f); \
>   Mcupanel_Command(0x002b); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x0000); \
>   Mcupanel_Data(0x00ef); \
>   Mcupanel_Command(0x0029); \
>   Mcupanel_Command(0x002c); \
> } while (0)
> 
> /* TODO(IGP): make sure LCD power consumption is low in these conditions */
> 
> #define __slcd_special_off()    \
> do {          \
>   /* Keep chip select disabled */  \
>   __gpio_set_pin(PIN_CS_N);  \
>   /* Keep RESET active */    \
>   __gpio_clear_pin(PIN_RESET_N);  \
> } while (0)
> 
> #define __slcd_special_rs_enable()  \
> do {          \
>   __gpio_clear_pin(PIN_RS_N);  \
> } while (0)
> 
> #define __slcd_special_rs_disable()  \
> do {          \
>   __gpio_set_pin(PIN_RS_N);  \
> } while(0)
> 
> #endif /* CONFIG_JZ_SLCD_A320_S6D04M0X21 */
</pre><br>

<pre>
diff Kconfig_orgi Kconfig
</pre>
<pre class="brush:cpp">
250a251,255
> config JZ_SLCD_A320_S6D04M0X21
>   bool "Dingoo A320 S6D04M0X21 smart LCD panel"
>   ---help---
>   Driver for S6D04M0X21 smart IPS panel as connected in Dingoo A320.
</pre><br>

<pre>
$ make menuconfig
</pre>
<p>
Device Drivers &rArr; Graphics support &rArr; Support for frame buffer devices &rArr; SLCD panel &rArr; Dingoo A320 S6D04M0X21 smart LCD panel<br>
<img src="port_s6d04m0x21/1.jpg" class="maxSize">
</p>

<pre>
$ make
</pre><br>

<p>
完成<br>
<img src="port_s6d04m0x21/2.jpg" class="maxSize">
</p>

</p>
<br><a href="../../../handheld.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
