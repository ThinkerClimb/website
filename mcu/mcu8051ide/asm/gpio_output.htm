<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../../header.js"></script>
<div id="page">
<h3>MCU8051IDE >> Assembly</h3>
<p><b>GPIO Output</b></p>
<hr size="1">
<p>
GPIO操作是熟悉一顆單晶片的最佳練習題目，司徒將在這篇教學中，說明如何使用8051的GPIO輸出功能，搭配的操作模擬環境則是MCU8051IDE。司徒畫了如下的硬體電路圖，說明這次練習的硬體接線關係，從電路圖上可以看到8051具有四個GPIO Port(P0, P1, P2, P3)，而本次練習只會用到P0並全部連接到LED輸出：<br>
<img src="gpio_output/1.jpg" class="maxSize">
</p>

<p>
接著寫一個最基本的GPIO輸出程式
</p>

<pre class="brush:cpp">
  led  equ p0
  led0 bit p0.0
  led1 bit p0.1
  led2 bit p0.2
  led3 bit p0.3
  led4 bit p0.4
  led5 bit p0.5
  led6 bit p0.6
  led7 bit p0.7

  .org 0x00
  jmp start

  .org 0x100
start:
  mov p0, #00h
  mov p0, #33h
  mov 80h, #55h
  mov led, #0aah
  clr p0.0
  setb led0
  jmp start
  .end
</pre>

<p>
值得注意的是，8051的GPIO輸出、入方向不需做設定，將數值寫到GPIO就是輸出；而讀取GPIO就是輸入。
</p>

<p>
程式說明
</p>

<table>
  <thead>
    <tr>
      <th>行數</th>
      <th>解說</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>相當於C語言的<b>#define</b>，定義led成p0</td>
    </tr>
    <tr>
      <td>2~9</td>
      <td>Bit位元定義，8051的P0~P3都是可以使用位元定義</td>
    </tr>
    <tr>
      <td>11~12</td>
      <td>
      <b>.org</b>指令定義接下來的程式碼擺放位址。程式一開始的執行位置是從0x00開始，接著就跳到start副程式，為何不接著繼續寫下去，而要做跳轉呢？這是因為前面的位置是保留給中斷向量使用的(如下表)，像0x00就是Reset向量，當MCU Reset後，MCU的IP會直接指到0x00的程式碼位置，所以程式就會從0x00開始執行，而下一個中斷向量是INT0，它的位址是0x03，如果使用者繼續寫程式而沒做跳轉時，當發生INT0中斷，程式將從0x03開始執行，因此，為了避免蓋到中斷向量，一般都是先做跳轉，雖然目前的程式沒有使用到INT0中斷，不過司徒的習慣還是維持中斷跳轉的習慣。
      </p>

      <p><b>中斷向量表</b><br>
      0x00: Reset<br>
      0x03: INT0<br>
      0x0b: Timer0<br>
      0x13: INT1<br>
      0x1b: Timer1<br>
      0x23: Serial<br>
      0x2b: Timer2<br>
    </td>
    </tr>
      <tr>
      <td>15</td>
      <td>Label代表的是一個程式碼記憶體位址</td>
    </tr>
    <tr>
      <td>16</td>
      <td>P0輸出0x00</td>
    </tr>
    <tr>
      <td>18</td>
      <td>P0(記憶體位址是0x80)輸出0x55</td>
    </tr>
    <tr>
      <td>19</td>
      <td>P0(led定義成p0)輸出0xaa</td>
    </tr>
    <tr>
      <td>20</td>
      <td>P0的第0位元設成0</td>
    </tr>
    <tr>
      <td>21</td>
      <td>P0的第0位元設成1</td>
    </tr>
    <tr>
      <td>23</td>
      <td><b>.end</b>指令告知編譯器，此行是程式碼結尾的地方</td>
    </tr>
  </tbody>
</table>

<p>
8051有四個I/O Port，分別是P0、P1、P2和P3，每個I/O都是8 Bits並且都可以Bit定址，位址如下所示：
</p>

<table>
  <thead>
    <tr>
      <th>Register</th>
      <th>Address</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>P0</td>
      <td>0x80</td>
    </tr>
    <tr>
      <td>P1</td>
      <td>0x90</td>
    </tr>
    <tr>
      <td>P2</td>
      <td>0xA0</td>
    </tr>
    <tr>
      <td>P3</td>
      <td>0xB0</td>
    </tr>
  </tbody>
</table>

<p>此次範例使用到的指令</p>
<table>
  <thead>
    <tr>
      <th>指令</th>
      <th>說明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>MOV direct, byte</td>
      <td>Move byte to internal RAM</td>
    </tr>
    <tr>
      <td>CLR bit</td>
      <td>Clear a bit-addressable RAM location or SFR</td>
    </tr>
    <tr>
      <td>SETB bit</td>
      <td>Set a bit-addressable RAM location or SFR</td>
    </tr>
    <tr>
      <td>LJMP &lt;address 16&gt;</td>
      <td>Long jump to a 16-bit address</td>
    </tr>
  </tbody>
</table>

<p>
接著開啟MCU8051IDE，準備編譯、模擬上面的程式：<br>
<img src="gpio_output/2.jpg" class="maxSize">
</p>

<p>
新增專案<br>
<img src="gpio_output/3.jpg" class="maxSize">
</p>

<p>
輸入專案名稱和存放位置，MCU使用AT89S52即可，目前用不到XDATA和XCODE支援，可以先不選：<br>
<img src="gpio_output/4.jpg" class="maxSize">
</p>

<p>
如果資料夾不存在，則提示是否產生，選擇"是"即可<br>
<img src="gpio_output/5.jpg" class="maxSize">
</p>

<p>
接著輸入上面的GPIO輸出測試程式：<br>
<img src="gpio_output/6.jpg" class="maxSize">
</p>

<p>
接著編譯程式：Tools&rArr;Compile<br>
<img src="gpio_output/7.jpg" class="maxSize">
</p>

<p>
存檔<br>
<img src="gpio_output/8.jpg" class="maxSize">
</p>

<p>
加到專案<br>
<img src="gpio_output/9.jpg" class="maxSize">
</p>

<p>
編譯完成<br>
<img src="gpio_output/10.jpg" class="maxSize">
</p>

<p>
開啟LED模擬<br>
<img src="gpio_output/11.jpg" class="maxSize">
</p>

<p>
設定LED連接腳位並設定成<b>ON</b><br>
<img src="gpio_output/12.jpg" class="maxSize">
</p>

<p>
接著開始模擬程式<br>
<img src="gpio_output/13.jpg" class="maxSize">
</p>

<p>
單步執行<br>
<img src="gpio_output/14.jpg" class="maxSize">
</p>

<p>
mov p0, #00h<br>
<img src="gpio_output/15.jpg" class="maxSize">
</p>

<p>
mov p0, #33h<br>
<img src="gpio_output/16.jpg" class="maxSize">
</p>

<p>
mov 80h, #55h<br>
<img src="gpio_output/17.jpg" class="maxSize">
</p>

<p>
mov led, #0aah<br>
<img src="gpio_output/18.jpg" class="maxSize">
</p>

<p>
clr p0.0<br>
<img src="gpio_output/19.jpg" class="maxSize">
</p>

<p>
setb led0<br>
<img src="gpio_output/20.jpg" class="maxSize">
</p>

<p>
<br><a href="../../../mcu.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
