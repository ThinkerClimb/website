<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../../header.js"></script>
<div id="page">
<h3>MCU8051IDE >> Assembly</h3>
<p><b>Timer0(Timer、Mode0、Poll)</b></p>
<hr size="1">
<p>
Timer的功用扮演相當重要的腳色，除了不需使用一般Loop計算等待之外，如果搭配中斷使用，在設定完Timer後，MCU就可以去做其它事情，不需浪費時間等待，達到分時多工的目地，不過此次的練習是基於Polling，因此，並沒有達到分時多工的目地。
</p>

<p>
模式0是13位元的計時模式，這個特殊模式是為了向下相容8048而保留的，此次練習將放在13位元的進位計算上，讓使用者瞭解如何正確使用模式0計算。
</p>

<p>
此次練習的電路圖<br>
<img src="timer0_timer_mode0_poll/1.jpg" class="maxSize">
</p>

<p>
此次練習的程式碼<br>
</p>

<pre class="brush:cpp">
  cnt     equ 3
  tl0_val equ ((8192 - cnt) mod 256) &amp; 1fh
  th0_val equ ((8192 - cnt) * 8) / 256
  led     bit p0.0

  .org 00h
  ljmp start

  .org 100h
start:
  setb led
  mov tmod, #0
  mov tl0, #tl0_val
  mov th0, #th0_val
  setb tr0
loop:
  nop
  jnb tf0, loop
  clr led
  jmp $
  .end
</pre>

<p>程式解說</p>
<table>
  <thead>
    <tr>
      <th>行數</th>
      <th>說明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>定義計時的次數為3(如果8051是12T並使用12MHZ石英震盪器時，則為3uS((12/12000000)*3S))</td>
    </tr>
    <tr>
      <td>2~3</td>
      <td>由於是常數，因此，可以讓Compiler先算，而在Mode 0時，TL0的最高3個位元是不使用的，因此可以使用&amp; 1f做遮罩運算；而TH0則要往左Shift 3個位元，由於MCU8051IDE不支援&lt;&lt;運算元，因此，只好使用乘法運算</td>
    </tr>
    <tr>
      <td>12~15</td>
      <td>設定為計時模式並使用模式0，接著載入要計時的Base是從哪開始，最後啟動計時器開始上數</td>
    </tr>
    <tr>
      <td>17</td>
      <td>模擬器使用，因NOP是一個指令週期，因此，可以用來證明TL0是從Bit 0開始累加</td>
    </tr>
    <tr>
      <td>18</td>
      <td>使用Poll方式查看使否已經計時完成</td>
    </tr>
  </tbody>
</table>

<p>
使用到的指令
</p>

<table>
  <thead>
    <tr>
      <th>指令</th>
      <th>說明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>MOV direct, byte</td>
      <td>Move byte to internal RAM</td>
    </tr>
    <tr>
      <td>SETB bit</td>
      <td>Set a bit-addressable RAM location or SFR</td>
    </tr>
    <tr>
      <td>CLR bit</td>
      <td>Clear a bit-addressable RAM location or SFR</td>
    </tr>
    <tr>
      <td>LJMP &lt;address 16&gt;</td>
      <td>Long jump to a 16-bit address</td>
    </tr>
    <tr>
      <td>JNB &lt;bit&gt;, &lt;rel addr&gt;</td>
      <td>Jump if bit is cleared</td>
    </tr>
    <tr>
      <td>NOP</td>
      <td>Do nothing</td>
    </tr>
  </tbody>
</table>

<p>使用到的暫存器</p>
<table>
  <thead>
    <tr>
      <th>名稱</th>
      <th>位址</th>
      <th>說明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>TCON</td>
      <td>0x88</td>
      <td>
      <table>
        <thead>
          <tr>
            <th colspan="2">Timer1</th>
            <th colspan="2">Timer0</th>
            <th colspan="2">INT1</th>
            <th colspan="2">INT0</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th>Bit 7</th>
            <th>6</th>
            <th>5</th>
            <th>4</th>
            <th>3</th>
            <th>2</th>
            <th>1</th>
            <th>0</th>
          </tr>
          <tr>
            <th>TF1</th>
            <th>TR1</th>
            <th>TF0</th>
            <th>TR0</th>
            <th>IE1</th>
            <th>IT1</th>
            <th>IE0</th>
            <th>IT0</th>
          </tr>
          <tr>
            <td>
            0(讀取): 未發生中斷<br>
            1(讀取): 已發生中斷<br>
            0(寫入): 清除中斷旗標
            </td>
            <td>
            1(寫入): 啓動<br>
            0(寫入): 停止
            </td>
            <td>
            0(讀取): 未發生中斷<br>
            1(讀取): 已發生中斷<br>
            0(寫入): 清除中斷旗標
            </td>
            <td>
            1(寫入): 啓動<br>
            0(寫入): 停止
            </td>
            <td>
            0(讀取): 未發生中斷<br>
            1(讀取): 已發生中斷
            </td>
            <td>
            0(寫入): 負緣觸發<br> 
            1(寫入): 低位觸發
            </td>
            <td>
            0(讀取): 未發生中斷<br>
            1(讀取): 已發生中斷
            </td>
            <td>
            0(寫入): 負緣觸發<br>
            1(寫入): 低位觸發
            </td>
          </tr>
        </tbody>
      </table>
      </td>
    </tr>
    <tr>
      <td>TMOD</td>
      <td>0x89</td>
      <td>
      <table>
        <thead>
          <tr>
            <th colspan="4">Timer1</th>
            <th colspan="4">Timer0</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th>Bit 7</th>
            <th>6</th>
            <th>5</th>
            <th>4</th>
            <th>3</th>
            <th>2</th>
            <th>1</th>
            <th>0</th>
          </tr>
          <tr>
            <th>Gate</th>
            <th>C/T</th>
            <th>M1</th>
            <th>M0</th>
            <th>Gate</th>
            <th>C/T</th>
            <th>M1</th>
            <th>M0</th>
          </tr>
          <tr>
            <td>
            0: TR1=1啓動<br>
            1: INT1=1 &amp; TR1=1時啓動
            </td>
            <td>
            0: 計時<br>
            1: 計數
            </td>
            <td colspan="2">
            00: 模式0<br>
            01: 模式1<br>
            10: 模式2<br>
            11: 模式3
            </td>
            <td>
            0: TR0=1啓動<br>
            1: INT0=1 &amp; TR0=1時啓動
            </td>
            <td>
            0: 計時<br>
            1: 計數
            </td>
            <td colspan="2">
            00: 模式0<br>
            01: 模式1<br>
            10: 模式2<br>
            11: 模式3
            </td>
          </tr>
        </tbody>
      </table>
    </td>
    </tr>
      <tr>
      <td>TL0</td>
      <td>0x8A</td>
      <td>Timer0 Low-byte</td>
    </tr>
    <tr>
      <td>TH0</td>
      <td>0x8B</td>
      <td>Timer0 High-byte</td>
    </tr>
  </tbody>
</table>

<p>
Timer0計時模式0的表示方式
</p>

<table>
  <thead>
    <tr>
      <th colspan="8">TH0</th>
      <th colspan="8">TL0</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Bit 7</th>
      <th>6</th>
      <th>5</th>
      <th>4</th>
      <th>3</th>
      <th>2</th>
      <th>1</th>
      <th>0</th>
      <th>Bit 7</th>
      <th>6</th>
      <th>5</th>
      <th>4</th>
      <th>3</th>
      <th>2</th>
      <th>1</th>
      <th>0</th>
    </tr>
    <tr>
      <td>Bit 12</td>
      <td>11</td>
      <td>10</td>
      <td>9</td>
      <td>8</td>
      <td>7</td>
      <td>6</td>
      <td>5</td>
      <th>X</th>
      <th>X</th>
      <th>X</th>
      <td>4</td>
      <td>3</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>

<p>
模式0的13位元表示如上表的棕色位元，TL0的最高3位元不使用，因此，如上的練習程式，8192-3=8189(0x1ffd)，TL0的最高3個Bit不使用，所以0x1ffd的最低5位元保留，其餘往左Shift 3個位元，就會是0xff1d
</p>

<p>
MCU8051IDE的專案操作步驟請參考之前的GPIO教學文章，完成後如下：<br>
<img src="timer0_timer_mode0_poll/2.jpg" class="maxSize">
</p>

<p>
在15行設定斷點(按滑鼠右鍵)，用來查看設定後的TL0和TH0數值<br>
<img src="timer0_timer_mode0_poll/3.jpg" class="maxSize">
</p>

<p>
接著按F2&rArr;F9，停止模擬後，可以看到左邊視窗的TL0和TH0數值是0xff1d，但是8192-3=8189，應該是0x1ffd，怎會是0xff1d呢？這是因為TL0的最高3個Bit不使用，所以0x1ffd的最低5位元保留，其餘往左Shift 3個位元，就會是0xff1d<br>
<img src="timer0_timer_mode0_poll/4.jpg" class="maxSize">
</p>

<p>
接著按2次F7來到18行，可以看到TL0從0x1d變成0x1e，代表數值是從Bit 0開始累加的<br>
<img src="timer0_timer_mode0_poll/5.jpg" class="maxSize">
</p>

<p>
接著按2次F7就可以來到19行，全部的執行指令週期是：1(nop) + 2(jnb) + 1(nop) = 3，剛好是我們設定的計時時間，接著再按2次F7就可以點亮LED<br>
<img src="timer0_timer_mode0_poll/6.jpg" class="maxSize">
</p>

<p>

<br><a href="../../../mcu.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
