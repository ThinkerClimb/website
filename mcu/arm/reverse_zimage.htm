<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>ARM</h3>
<p><b>Reverse zImage</b></p>
<hr size="1">
<p>
zImage檔案是一個壓縮檔案，該檔案裡麵包含許多小檔案，這些小檔案提供不同的使用用途，最重要的兩檔案則是：head.S程式和Kernel程式，司徒將會介紹如何反組譯這兩個檔案，而zImage檔案的佈局如下說明
</p>

<pre>
zImage start
  descompression code start
    head.S
    some C code to unzip the data
  decompression code end 

  compressed image start
    piggy.gz
  compressed image end
zImage end
</pre><br>

<p>
在Bootloader程式準備要載入zImage檔案時，Bootloader程式會檢查zImage檔案格式是否正確，如果zImage檔案格式是正確的，則Bootloader程式載入zImage檔案，反之則顯示zImage Magic不正確的訊息，zImage檔案格式如下表
</p>

<table>
  <tr>
    <th>Offset</th>
    <th>Value</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>0x24</td>
    <td>0x016F2818</td>
    <td>Magic number used to identify this is an ARM Linux zImage</td>
  </tr>
  <tr>
    <td>0x28</td>
    <td>Start Address</td>
    <td>The address the zImage starts at</td>
  </tr>
  <tr>
    <td>0x2C</td>
    <td>End Address</td>
    <td>The address the zImage ends at</td>
  </tr>
</table><br>
                    
<p>
司徒將介紹zImage檔案的其中兩個部份，第一部份是head.S程式(arch/arm/boot/compressed/head.S)，而第二部份就是Kernel程式(打包成piggy.gz檔案)，司徒使用一個zImage檔案測試給大家看，步驟如下
</p>

<pre>
$ arm-linux-objdump -EL -b binary -D -m armv5t zImage
</pre><br>

<p>
這是zImage檔案的第一部份head.S程式
</p>

<pre class="brush:cpp">
zImage.bin:     file format binary
Disassembly of section .data:

00000000 &lt;.data&gt;:
   0:       e1a00000        nop                     (mov r0,r0)
   4:       e1a00000        nop                     (mov r0,r0)
   8:       e1a00000        nop                     (mov r0,r0)
   c:       e1a00000        nop                     (mov r0,r0)
  10:       e1a00000        nop                     (mov r0,r0)
  14:       e1a00000        nop                     (mov r0,r0)
  18:       e1a00000        nop                     (mov r0,r0)
  1c:       e1a00000        nop                     (mov r0,r0)
  20:       ea000002        b       0x30
  24:       016f2818        cmneq   pc, r8, lsl r8
  28:       00000000        andeq   r0, r0, r0
  2c:       000fee40        andeq   lr, pc, r0, asr #28
  ...
</pre><br>

<p>
接著我們需要從zImage檔案分離Kernel程式，而Kernel程式是被打包成piggy.gz檔案，gzip檔案的開頭是0x8b1f，所以我們可以使用如下指令找出piggy.gz的位置
</p>

<pre>
$ arm-linux-objdump -EL -b binary -D -m armv5t zImage | grep 8b1f
</pre>

<pre class="brush:cpp">
 2eb8:       00088b1f        andeq   r8, r8, pc, lsl fp
 530c:       28b1fc84        ldmcsia r1!, {r2, r7, sl, fp, ip, sp, lr, pc}
 55e0:       7f768b1f        swivc   0x00768b1f
1962c:       5ea8b1f1        mcrpl   1, 5, fp, cr8, cr1, {7}
1b9e8:       38b1f475        ldmccia r1!, {r0, r2, r4, r5, r6, sl, ip, sp, lr, pc}
26ec0:       5f8b1f33        swipl   0x008b1f33
2779c:       3e918b1f        mrccc   11, 4, r8, cr1, cr15, {0}
47738:       a48b1fca        strge   r1, [fp], #4042
54a10:       18b1f1a7        ldmneia r1!, {r0, r1, r2, r5, r7, r8, ip, sp, lr, pc}
55148:       8b1fc5e9        blhi    0x8468f4
...
</pre><br>

<p>
我們看到Kernel程式的位置是從0x2eb8(11960)開始，所以我們可以使用dd命令做複製的動作
</p>

<pre>
$ dd if=zImage of=piggy.gz bs=1 skip=11960
</pre><br>

<p>
接著對piggy.gz檔案進行解壓縮
</p>

<pre>
$ gunzip piggy.gz
</pre>

<p>
解壓縮完piggy.gz檔案後，我們還是一樣使用objdump做組合語言分析，這樣就可以得到反組譯後的Kernel程式。
</p>

<p>
<br><a href="../../mcu.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
